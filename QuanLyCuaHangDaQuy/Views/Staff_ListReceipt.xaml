<UserControl x:Class="QuanLyCuaHangDaQuy.Views.Staff_ListReceipt"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QuanLyCuaHangDaQuy.Views"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:QuanLyCuaHangDaQuy.ViewModels" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Height="705.75" Width="1080">
    <UserControl.DataContext>
        <vm:Staff_ListReceiptVM></vm:Staff_ListReceiptVM>
    </UserControl.DataContext>
    <UserControl.Resources>
        <Style x:Key="MenuBarBtStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                CornerRadius="10"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground"  Value="Orange"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground"  Value="#FCC871"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding LoadCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="81.75"></RowDefinition>
            <RowDefinition Height="44"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="24"></ColumnDefinition>
            <ColumnDefinition Width="221"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="362"></ColumnDefinition>
            <ColumnDefinition Width="24"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!-- Nut Create -->
        <Button
            Grid.Column="1"
             materialDesign:ShadowAssist.ShadowDepth="Depth0" 
            materialDesign:ButtonAssist.CornerRadius="11.25"
             Style="{StaticResource MaterialDesignRaisedButton}"
            BorderThickness="0"
            Height="36"
            Background="#FCC871"
            Command="{Binding AddCommand}"
            >
            <StackPanel Orientation="Horizontal">
                <TextBlock 
                    HorizontalAlignment="Left"
                    Text="Create my receipt" 
                    Margin="0,-4,0,1"
                    FontSize="19.5"
                    FontWeight="Bold"
                    Foreground="White"/>
                <materialDesign:PackIcon Kind="PlusCircle" Foreground="White" 
                                         Margin="7,-2,0,0"
                                         VerticalAlignment="Center" Height="22" Width="22"/>
            </StackPanel>
        </Button>
        <!--nut export-->
        <Button
            Grid.Column="2"
            Width="230"
            HorizontalAlignment="Left"
            Margin="10"
             materialDesign:ShadowAssist.ShadowDepth="Depth0" 
            materialDesign:ButtonAssist.CornerRadius="11.25"
             Style="{StaticResource MaterialDesignRaisedButton}"
            Command="{Binding ExportCommand}"
            BorderThickness="2"
            Height="36"
            Background="Transparent"
            BorderBrush="#BCBCBC"
            >
            <StackPanel Orientation="Horizontal">
                <TextBlock 
                    HorizontalAlignment="Left"
                    Text="Export Service List" 
                    Margin="0,-4,0,1"
                    FontSize="19.5"
                    FontWeight="Bold"
                    Foreground="#FCC871"/>
            </StackPanel>
        </Button>
        <!-- Nut Search -->
        <Border Grid.Column="3"
                CornerRadius="15"
                Height="35.04"
                BorderBrush="#ABABAB"
                BorderThickness="1">
            <StackPanel Orientation="Horizontal">
                <TextBox Margin="5,3,5,5"
                         Width="310"
                         BorderThickness="0"
                         Text="{Binding TextSearch,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding TextSearchCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Background="Transparent" 
                        Width="31" 
                        materialDesign:ShadowAssist.ShadowDepth="Depth0" 
                         Style="{StaticResource MaterialDesignFloatingActionLightButton}" Height="31"
                        BorderThickness="0"
                        BorderBrush="White"
                        >
                    <materialDesign:PackIcon  Kind="Magnify"      
                                         Foreground="Gray" Width="30" Height="19" HorizontalAlignment="Center"
                                              />
                </Button>
            </StackPanel>
        </Border>
        <!-- List -->
        <Border Grid.Column="1" Grid.ColumnSpan="3"
                Grid.Row="1"
                Background="#FCC871"
                CornerRadius="7.62,7.62,0,0">
        </Border>
        <Border Grid.Column="1" Grid.ColumnSpan="3"
                Grid.Row="2"
                Background="#FBFBFB"
                CornerRadius="0,0,7.62,7.62">
        </Border>
        <DataGrid Grid.Row="1"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  Grid.RowSpan="2"
                  ItemsSource="{Binding ListReceipt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedReceipt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  AutoGenerateColumns = "False"
                  Background="Transparent"
                  d:ItemsSource="{d:SampleData ItemCount=5}"
                  IsEnabled="True"
                  IsReadOnly="True"
                  >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding SelectedReceiptCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="No." Width="100" Binding="{Binding No,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="ID" Width="100" Binding="{Binding ID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Name of customer" Width="300" Binding="{Binding FullName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Booking date" Width="200" Binding="{Binding DateBooking_format,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Status" Width="150" Binding="{Binding Stt,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <!-- Stt-->
                <DataGridTemplateColumn Header="" Width="70" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="0 -10 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <Button Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{Binding ColorStt}"
                                        Width="20"
                                        Height="20"
                                         Padding="0">
                                    <materialDesign:PackIcon Kind="CheckCircleOutline" 
                                                             Width="20"
                                                             Padding="0"
                                                             HorizontalAlignment="Left"
                                                             Height="20"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Edit-->
                <DataGridTemplateColumn Header="" Width="30" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="0 -10 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent">
                                <Button Background="Transparent"
                                        Style="{StaticResource MenuBarBtStyle}"
                                        BorderThickness="0"
                                        Width="20"
                                         Command="{Binding EditCommand}"
                                        Height="20"
                                         Padding="0">

                                    <materialDesign:PackIcon Kind="Pencil" Width="20"
                                                             Height="20"
                                                             Padding="0"
                                                             HorizontalAlignment="Right"
                                                             Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                                    </materialDesign:PackIcon>

                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!-- Delete-->
                <DataGridTemplateColumn Header="" Width="30" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Margin="0 -10 0 0" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                <Button Background="Transparent"
                                        BorderThickness="0"
                                        Style="{StaticResource MenuBarBtStyle}"
                                        Width="20"
                                       Command="{Binding DeleteCommand}"
                                        Height="20"
                                         Padding="0">
                                    <materialDesign:PackIcon Kind="Delete" 
                                                             Width="20"
                                                             Padding="0"
                                                            Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                             HorizontalAlignment="Left"
                                                             Height="20"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                    <Setter Property="Height" Value="42"></Setter>
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="White"></Setter>
                    <Setter Property="FontFamily" Value="{StaticResource Lato}"/>
                    <Setter Property="FontSize" Value="22.85"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Foreground" Value="Black"></Setter>
                    <Setter Property="FontSize" Value="15.24"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Height" Value="36"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0,10,0,0"/>
                    <Setter Property="IsEnabled" Value="true"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
    </Grid>
</UserControl>
